# {{ ansible_managed }}
[cache]
STORAGE_DIR = {{ graphite_carbon_cache_storage_dir }}
LOCAL_DATA_DIR = {{ graphite_carbon_cache_local_data_dir }}
WHITELISTS_DIR = {{ graphite_carbon_cache_whitelists_dir }}
CONF_DIR = {{ graphite_carbon_cache_conf_dir }}
LOG_DIR = {{ graphite_carbon_cache_log_dir }}
PID_DIR = {{ graphite_carbon_cache_pid_dir }}
DATABASE = {{ graphite_carbon_cache_database }}
ENABLE_LOGROTATION = {{ graphite_carbon_cache_enable_logrotation }}
USER = {{ graphite_user }}
MAX_CACHE_SIZE = {{ graphite_carbon_cache_max_cache_size }}
MAX_UPDATES_PER_SECOND = {{ graphite_carbon_cache_max_updates_per_second }}
MAX_UPDATES_PER_SECOND_ON_SHUTDOWN = {{ graphite_carbon_cache_max_updates_per_second_on_shutdown }}
MAX_CREATES_PER_MINUTE = {{ graphite_carbon_cache_max_creates_per_minute }}
MIN_TIMESTAMP_RESOLUTION = {{ graphite_carbon_cache_min_timestamp_resolution }}
MIN_TIMESTAMP_LAG = {{ graphite_carbon_cache_min_timestamp_lag }}
LINE_RECEIVER_INTERFACE = {{ graphite_carbon_cache_line_receiver_interface }}
LINE_RECEIVER_PORT = {{ graphite_carbon_cache_line_receiver_port }}
ENABLE_UDP_LISTENER = {{ graphite_carbon_cache_enable_udp_listener }}
UDP_RECEIVER_INTERFACE = {{ graphite_carbon_cache_udp_receiver_interface }}
UDP_RECEIVER_PORT = {{ graphite_carbon_cache_udp_receiver_port }}
PICKLE_RECEIVER_INTERFACE = {{ graphite_carbon_cache_pickle_receiver_interface }}
PICKLE_RECEIVER_PORT = {{ graphite_carbon_cache_pickle_receiver_port }}
PROTOBUF_RECEIVER_INTERFACE = {{ graphite_carbon_cache_protobuf_receiver_interface }}
PROTOBUF_RECEIVER_PORT = {{ graphite_carbon_cache_protobuf_receiver_port }}
MAX_RECEIVER_CONNECTIONS = {{ graphite_carbon_cache_max_receiver_connections }}
USE_INSECURE_UNPICKLER = {{ graphite_carbon_cache_use_insecure_unpickler }}
CACHE_QUERY_INTERFACE = {{ graphite_carbon_cache_cache_query_interface }}
CACHE_QUERY_PORT = {{ graphite_carbon_cache_cache_query_port }}
USE_FLOW_CONTROL = {{ graphite_carbon_cache_use_flow_control }}
METRIC_CLIENT_IDLE_TIMEOUT = {{ graphite_carbon_cache_metric_client_idle_timeout }}
LOG_UPDATES = {{ graphite_carbon_cache_log_updates }}
LOG_CREATES = {{ graphite_carbon_cache_log_creates }}
LOG_CACHE_HITS = {{ graphite_carbon_cache_log_cache_hits }}
LOG_CACHE_QUEUE_SORTS = {{ graphite_carbon_cache_log_cache_queue_sorts }}
CACHE_WRITE_STRATEGY = {{ graphite_carbon_cache_cache_write_strategy }}
WHISPER_AUTOFLUSH = {{ graphite_carbon_cache_whisper_autoflush }}
WHISPER_SPARSE_CREATE = {{ graphite_carbon_cache_whisper_sparse_create }}
WHISPER_FALLOCATE_CREATE = {{ graphite_carbon_cache_whisper_fallocate_create }}
WHISPER_LOCK_WRITES = {{ graphite_carbon_cache_whisper_lock_writes }}
WHISPER_FADVISE_RANDOM = {{ graphite_carbon_cache_whisper_fadvise_random }}
CERES_NODE_CACHING_BEHAVIOR = {{ graphite_carbon_cache_ceres_node_caching_behavior }}
CERES_SLICE_CACHING_BEHAVIOR = {{ graphite_carbon_cache_ceres_slice_caching_behavior }}
CERES_MAX_SLICE_GAP = {{ graphite_carbon_cache_ceres_max_slice_gap }}
CERES_LOCK_WRITES = {{ graphite_carbon_cache_ceres_lock_writes }}
USE_WHITELIST = {{ graphite_carbon_cache_use_whitelist }}
CARBON_METRIC_PREFIX = {{ graphite_carbon_cache_carbon_metric_prefix }}
CARBON_METRIC_INTERVAL = {{ graphite_carbon_cache_carbon_metric_interval }}
ENABLE_AMQP = {{ graphite_carbon_cache_enable_amqp }}
AMQP_VERBOSE = {{ graphite_carbon_cache_amqp_verbose }}
AMQP_HOST = {{ graphite_carbon_cache_amqp_host }}
AMQP_PORT = {{ graphite_carbon_cache_amqp_port }}
AMQP_VHOST = {{ graphite_carbon_cache_amqp_vhost }}
AMQP_USER = {{ graphite_carbon_cache_amqp_user }}
AMQP_PASSWORD = {{ graphite_carbon_cache_amqp_password }}
AMQP_EXCHANGE = {{ graphite_carbon_cache_amqp_exchange }}
AMQP_METRIC_NAME_IN_BODY = {{ graphite_carbon_cache_amqp_metric_name_in_body }}
ENABLE_MANHOLE = {{ graphite_carbon_cache_enable_manhole }}
MANHOLE_INTERFACE = {{ graphite_carbon_cache_manhole_interface }}
MANHOLE_PORT = {{ graphite_carbon_cache_manhole_port }}
MANHOLE_USER = {{ graphite_carbon_cache_manhole_user }}
MANHOLE_PUBLIC_KEY = {{ graphite_carbon_cache_manhole_public_key }}
BIND_PATTERNS = {{ graphite_carbon_cache_bind_patterns }}
GRAPHITE_URL = {{ graphite_carbon_cache_graphite_url }}
ENABLE_TAGS = {{ graphite_carbon_cache_enable_tags }}
TAG_UPDATE_INTERVAL = {{ graphite_carbon_cache_tag_update_interval }}
TAG_HASH_FILENAMES = {{ graphite_carbon_cache_tag_hash_filenames }}
TAG_BATCH_SIZE = {{ graphite_carbon_cache_tag_batch_size }}
TAG_QUEUE_SIZE = {{ graphite_carbon_cache_tag_queue_size }}
RAVEN_DSN = {{ graphite_carbon_cache_raven_dsn }}
[relay]
LINE_RECEIVER_INTERFACE = {{ graphite_carbon_relay_line_receiver_interface }}
LINE_RECEIVER_PORT = {{ graphite_carbon_relay_line_receiver_port }}
PICKLE_RECEIVER_INTERFACE = {{ graphite_carbon_relay_pickle_receiver_interface }}
PICKLE_RECEIVER_PORT = {{ graphite_carbon_relay_pickle_receiver_port }}
RELAY_METHOD = {{ graphite_carbon_relay_relay_method }}
REPLICATION_FACTOR = {{ graphite_carbon_relay_replication_factor }}
DIVERSE_REPLICAS = {{ graphite_carbon_relay_diverse_replicas }}
DESTINATIONS = {{ graphite_carbon_relay_destinations | join(', ') }}
DESTINATION_PROTOCOL = {{ graphite_carbon_relay_destination_protocol }}
DESTINATION_TRANSPORT = {{ graphite_carbon_relay_destination_transport }}
DESTINATION_SSL_CA = {{ graphite_carbon_relay_destination_destination_ssl_ca }}
DESTINATIONS_POOL_REPLICAS = {{ graphite_carbon_relay_destinations_pool_replicas }}
DYNAMIC_ROUTER = {{ graphite_carbon_relay_dynamic_router }}
DYNAMIC_ROUTER_MAX_RETRIES = {{ graphite_carbon_relay_dynamic_router_max_retries }}
MAX_QUEUE_SIZE = {{ graphite_carbon_max_queue_size }}
MAX_DATAPOINTS_PER_MESSAGE = {{ graphite_carbon_relay_max_datapoints_per_message }}
MAX_RECEIVER_CONNECTIONS = {{ graphite_carbon_relay_max_receiver_connections }}
USER = {{ graphite_carbon_relay_user }}
QUEUE_LOW_WATERMARK_PCT = {{ graphite_carbon_relay_queue_low_watermark_pct }}
TIME_TO_DEFER_SENDING = {{ graphite_carbon_relay_time_to_defer_sending }}
USE_FLOW_CONTROL = {{ graphite_carbon_relay_use_flow_control }}
METRIC_CLIENT_IDLE_TIMEOUT = {{ graphite_carbon_relay_metric_client_idle_timeout }}
USE_WHITELIST = {{ graphite_carbon_relay_use_whitelist }}
CARBON_METRIC_PREFIX = {{ graphite_carbon_relay_carbon_metric_prefix }}
CARBON_METRIC_INTERVAL = {{ graphite_carbon_relay_carbon_metric_interval }}
LOG_LISTENER_CONN_SUCCESS = {{ graphite_carbon_relay_log_listener_conn_success }}
USE_RATIO_RESET = {{ graphite_carbon_relay_use_ratio_reset }}
MIN_RESET_STAT_FLOW = {{ graphite_carbon_relay_min_reset_stat_flow }}
MIN_RESET_RATIO = {{ graphite_carbon_relay_min_reset_ratio }}
MIN_RESET_INTERVAL = {{ graphite_carbon_relay_min_reset_interval }}
TCP_KEEPALIVE = {{ graphite_carbon_relay_tcp_keepalive }}
TCP_KEEPIDLE = {{ graphite_carbon_relay_tcp_keepidle }}
TCP_KEEPINTVL = {{ graphite_carbon_relay_tcp_keepintvl }}
TCP_KEEPCNT = {{ graphite_carbon_relay_tcp_keepcnt }}
[aggregator]
LINE_RECEIVER_INTERFACE = 0.0.0.0
LINE_RECEIVER_PORT = 2023

PICKLE_RECEIVER_INTERFACE = 0.0.0.0
PICKLE_RECEIVER_PORT = 2024

# If set true, metric received will be forwarded to DESTINATIONS in addition to
# the output of the aggregation rules. If set false the carbon-aggregator will
# only ever send the output of aggregation.
FORWARD_ALL = True

# Filenames of the configuration files to use for this instance of aggregator.
# Filenames are relative to CONF_DIR.
#
# AGGREGATION_RULES = aggregation-rules.conf
# REWRITE_RULES = rewrite-rules.conf

# This is a list of carbon daemons we will send any relayed or
# generated metrics to. The default provided would send to a single
# carbon-cache instance on the default port. However if you
# use multiple carbon-cache instances then it would look like this:
#
# DESTINATIONS = 127.0.0.1:2004:a, 127.0.0.1:2104:b
#
# The format is comma-delimited IP:PORT:INSTANCE where the :INSTANCE part is
# optional and refers to the "None" instance if omitted.
#
# Note that if the destinations are all carbon-caches then this should
# exactly match the webapp's CARBONLINK_HOSTS setting in terms of
# instances listed (order matters!).
DESTINATIONS = 127.0.0.1:2004

# If you want to add redundancy to your data by replicating every
# datapoint to more than one machine, increase this.
REPLICATION_FACTOR = 1

# This is the maximum number of datapoints that can be queued up
# for a single destination. Once this limit is hit, we will
# stop accepting new data if USE_FLOW_CONTROL is True, otherwise
# we will drop any subsequently received datapoints.
MAX_QUEUE_SIZE = 10000

# Set this to False to drop datapoints when any send queue (sending datapoints
# to a downstream carbon daemon) hits MAX_QUEUE_SIZE. If this is True (the
# default) then sockets over which metrics are received will temporarily stop accepting
# data until the send queues fall below 80% MAX_QUEUE_SIZE.
USE_FLOW_CONTROL = True

# If enabled this setting is used to timeout metric client connection if no
# metrics have been sent in specified time in seconds
#METRIC_CLIENT_IDLE_TIMEOUT = None

# This defines the maximum "message size" between carbon daemons.
# You shouldn't need to tune this unless you really know what you're doing.
MAX_DATAPOINTS_PER_MESSAGE = 500

# This defines how many datapoints the aggregator remembers for
# each metric. Aggregation only happens for datapoints that fall in
# the past MAX_AGGREGATION_INTERVALS * intervalSize seconds.
MAX_AGGREGATION_INTERVALS = 5

# Limit the number of open connections the receiver can handle as any time.
# Default is no limit. Setting up a limit for sites handling high volume
# traffic may be recommended to avoid running out of TCP memory or having
# thousands of TCP connections reduce the throughput of the service.
#MAX_RECEIVER_CONNECTIONS = inf

# By default (WRITE_BACK_FREQUENCY = 0), carbon-aggregator will write back
# aggregated data points once every rule.frequency seconds, on a per-rule basis.
# Set this (WRITE_BACK_FREQUENCY = N) to write back all aggregated data points
# every N seconds, independent of rule frequency. This is useful, for example,
# to be able to query partially aggregated metrics from carbon-cache without
# having to first wait rule.frequency seconds.
# WRITE_BACK_FREQUENCY = 0

# Set this to True to enable whitelisting and blacklisting of metrics in
# CONF_DIR/whitelist.conf and CONF_DIR/blacklist.conf. If the whitelist is
# missing or empty, all metrics will pass through
# USE_WHITELIST = False

# By default, carbon itself will log statistics (such as a count,
# metricsReceived) with the top level prefix of 'carbon' at an interval of 60
# seconds. Set CARBON_METRIC_INTERVAL to 0 to disable instrumentation
# CARBON_METRIC_PREFIX = carbon
# CARBON_METRIC_INTERVAL = 60

# In order to turn off logging of successful connections for the line
# receiver, set this to False
# LOG_LISTENER_CONN_SUCCESS = True

# In order to turn off logging of metrics with no corresponding
# aggregation rules receiver, set this to False
# LOG_AGGREGATOR_MISSES = False

# Specify the user to drop privileges to
# If this is blank carbon-aggregator runs as the user that invokes it
# USER =

# Part of the code, and particularly aggregator rules, need
# to cache metric names. To avoid leaking too much memory you
# can tweak the size of this cache. The default allow for 1M
# different metrics per rule (~200MiB).
# CACHE_METRIC_NAMES_MAX=1000000

# You can optionally set a ttl to this cache.
# CACHE_METRIC_NAMES_TTL=600
